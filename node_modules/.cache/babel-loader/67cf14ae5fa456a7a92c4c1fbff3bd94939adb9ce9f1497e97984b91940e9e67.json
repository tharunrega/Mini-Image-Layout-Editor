{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  selectedId: null,\n  past: [],\n  future: []\n};\nconst clamp = (val, min, max) => Math.max(min, Math.min(max, val));\nconst CANVAS = {\n  width: 900,\n  height: 520,\n  padding: 8\n};\nconst pushHistory = state => {\n  state.past.push({\n    items: state.items,\n    selectedId: state.selectedId\n  });\n  state.future = [];\n};\nconst elementsSlice = createSlice({\n  name: 'elements',\n  initialState,\n  reducers: {\n    hydrate(state, action) {\n      return {\n        ...state,\n        ...action.payload,\n        past: [],\n        future: []\n      };\n    },\n    addRect: {\n      reducer(state, action) {\n        pushHistory(state);\n        state.items = [...state.items, action.payload];\n        state.selectedId = action.payload.id;\n      },\n      prepare() {\n        return {\n          payload: {\n            id: nanoid(),\n            name: 'Rectangle',\n            type: 'rect',\n            x: 40 + Math.random() * 120,\n            y: 40 + Math.random() * 120,\n            width: 180,\n            height: 140,\n            fill: '#cfe8ff'\n          }\n        };\n      }\n    },\n    addImage: {\n      reducer(state, action) {\n        pushHistory(state);\n        state.items = [...state.items, action.payload];\n        state.selectedId = action.payload.id;\n      },\n      prepare(src) {\n        return {\n          payload: {\n            id: nanoid(),\n            name: 'Image',\n            type: 'image',\n            x: 360 + Math.random() * 120,\n            y: 80 + Math.random() * 120,\n            width: 200,\n            height: 140,\n            src\n          }\n        };\n      }\n    },\n    select(state, action) {\n      state.selectedId = action.payload;\n    },\n    update(state, action) {\n      // payload: {id, x,y,width,height}\n      const {\n        id,\n        x,\n        y,\n        width,\n        height\n      } = action.payload;\n      const idx = state.items.findIndex(it => it.id === id);\n      if (idx >= 0) {\n        state.items = state.items.map((it, i) => i === idx ? {\n          ...it,\n          x: clamp(x, 0, CANVAS.width - (width !== null && width !== void 0 ? width : it.width)),\n          y: clamp(y, 0, CANVAS.height - (height !== null && height !== void 0 ? height : it.height)),\n          width: width !== null && width !== void 0 ? width : it.width,\n          height: height !== null && height !== void 0 ? height : it.height\n        } : it);\n      }\n    },\n    commit(state) {\n      // Push to history after drag/resize is completed\n      pushHistory(state);\n      state.items = [...state.items];\n    },\n    deleteSelected(state) {\n      if (!state.selectedId) return;\n      pushHistory(state);\n      state.items = state.items.filter(it => it.id !== state.selectedId);\n      state.selectedId = null;\n    },\n    rename(state, action) {\n      const {\n        id,\n        name\n      } = action.payload;\n      state.items = state.items.map(it => it.id === id ? {\n        ...it,\n        name\n      } : it);\n    },\n    undo(state) {\n      const prev = state.past.pop();\n      if (prev) {\n        state.future.push({\n          items: state.items,\n          selectedId: state.selectedId\n        });\n        state.items = prev.items;\n        state.selectedId = prev.selectedId;\n      }\n    },\n    redo(state) {\n      const next = state.future.pop();\n      if (next) {\n        state.past.push({\n          items: state.items,\n          selectedId: state.selectedId\n        });\n        state.items = next.items;\n        state.selectedId = next.selectedId;\n      }\n    },\n    saveLocal(state) {\n      const data = {\n        items: state.items,\n        selectedId: state.selectedId\n      };\n      localStorage.setItem('mini-editor-layout', JSON.stringify(data));\n    },\n    loadLocal(state) {\n      const raw = localStorage.getItem('mini-editor-layout');\n      if (raw) {\n        const parsed = JSON.parse(raw);\n        state.items = parsed.items || [];\n        state.selectedId = parsed.selectedId || null;\n        state.past = [];\n        state.future = [];\n      }\n    }\n  }\n});\nexport const {\n  hydrate,\n  addRect,\n  addImage,\n  select,\n  update,\n  commit,\n  deleteSelected,\n  rename,\n  undo,\n  redo,\n  saveLocal,\n  loadLocal\n} = elementsSlice.actions;\nexport const selectAll = s => s.elements.items;\nexport const selectSelectedId = s => s.elements.selectedId;\nexport const selectCanvasSize = () => ({\n  width: 900,\n  height: 520\n});\nexport default elementsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","items","selectedId","past","future","clamp","val","min","max","Math","CANVAS","width","height","padding","pushHistory","state","push","elementsSlice","name","reducers","hydrate","action","payload","addRect","reducer","id","prepare","type","x","random","y","fill","addImage","src","select","update","idx","findIndex","it","map","i","commit","deleteSelected","filter","rename","undo","prev","pop","redo","next","saveLocal","data","localStorage","setItem","JSON","stringify","loadLocal","raw","getItem","parsed","parse","actions","selectAll","s","elements","selectSelectedId","selectCanvasSize"],"sources":["C:/Users/tharu/Downloads/mini-layout-editor/mini-layout-editor/src/redux/elementsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: [],\n  selectedId: null,\n  past: [],\n  future: []\n};\n\nconst clamp = (val, min, max) => Math.max(min, Math.min(max, val));\n\nconst CANVAS = { width: 900, height: 520, padding: 8 };\n\nconst pushHistory = (state) => {\n  state.past.push({ items: state.items, selectedId: state.selectedId });\n  state.future = [];\n};\n\nconst elementsSlice = createSlice({\n  name: 'elements',\n  initialState,\n  reducers: {\n    hydrate(state, action) {\n      return { ...state, ...action.payload, past: [], future: [] };\n    },\n    addRect: {\n      reducer(state, action) {\n        pushHistory(state);\n        state.items = [...state.items, action.payload];\n        state.selectedId = action.payload.id;\n      },\n      prepare() {\n        return {\n          payload: {\n            id: nanoid(),\n            name: 'Rectangle',\n            type: 'rect',\n            x: 40 + Math.random() * 120,\n            y: 40 + Math.random() * 120,\n            width: 180,\n            height: 140,\n            fill: '#cfe8ff'\n          }\n        };\n      }\n    },\n    addImage: {\n      reducer(state, action) {\n        pushHistory(state);\n        state.items = [...state.items, action.payload];\n        state.selectedId = action.payload.id;\n      },\n      prepare(src) {\n        return {\n          payload: {\n            id: nanoid(),\n            name: 'Image',\n            type: 'image',\n            x: 360 + Math.random() * 120,\n            y: 80 + Math.random() * 120,\n            width: 200,\n            height: 140,\n            src\n          }\n        };\n      }\n    },\n    select(state, action) {\n      state.selectedId = action.payload;\n    },\n    update(state, action) {\n      // payload: {id, x,y,width,height}\n      const { id, x, y, width, height } = action.payload;\n      const idx = state.items.findIndex(it => it.id === id);\n      if (idx >= 0) {\n        state.items = state.items.map((it, i) => i === idx ? {\n          ...it,\n          x: clamp(x, 0, CANVAS.width - (width ?? it.width)),\n          y: clamp(y, 0, CANVAS.height - (height ?? it.height)),\n          width: width ?? it.width,\n          height: height ?? it.height\n        } : it);\n      }\n    },\n    commit(state) {\n      // Push to history after drag/resize is completed\n      pushHistory(state);\n      state.items = [...state.items];\n    },\n    deleteSelected(state) {\n      if (!state.selectedId) return;\n      pushHistory(state);\n      state.items = state.items.filter(it => it.id !== state.selectedId);\n      state.selectedId = null;\n    },\n    rename(state, action) {\n      const { id, name } = action.payload;\n      state.items = state.items.map(it => it.id === id ? { ...it, name } : it);\n    },\n    undo(state) {\n      const prev = state.past.pop();\n      if (prev) {\n        state.future.push({ items: state.items, selectedId: state.selectedId });\n        state.items = prev.items;\n        state.selectedId = prev.selectedId;\n      }\n    },\n    redo(state) {\n      const next = state.future.pop();\n      if (next) {\n        state.past.push({ items: state.items, selectedId: state.selectedId });\n        state.items = next.items;\n        state.selectedId = next.selectedId;\n      }\n    },\n    saveLocal(state) {\n      const data = { items: state.items, selectedId: state.selectedId };\n      localStorage.setItem('mini-editor-layout', JSON.stringify(data));\n    },\n    loadLocal(state) {\n      const raw = localStorage.getItem('mini-editor-layout');\n      if (raw) {\n        const parsed = JSON.parse(raw);\n        state.items = parsed.items || [];\n        state.selectedId = parsed.selectedId || null;\n        state.past = [];\n        state.future = [];\n      }\n    }\n  }\n});\n\nexport const {\n  hydrate, addRect, addImage, select, update, commit,\n  deleteSelected, rename, undo, redo, saveLocal, loadLocal\n} = elementsSlice.actions;\n\nexport const selectAll = s => s.elements.items;\nexport const selectSelectedId = s => s.elements.selectedId;\nexport const selectCanvasSize = () => ({ width: 900, height: 520 });\n\nexport default elementsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,KAAK,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACD,GAAG,CAACD,GAAG,EAAEE,IAAI,CAACF,GAAG,CAACC,GAAG,EAAEF,GAAG,CAAC,CAAC;AAElE,MAAMI,MAAM,GAAG;EAAEC,KAAK,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAE,CAAC;AAEtD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7BA,KAAK,CAACZ,IAAI,CAACa,IAAI,CAAC;IAAEf,KAAK,EAAEc,KAAK,CAACd,KAAK;IAAEC,UAAU,EAAEa,KAAK,CAACb;EAAW,CAAC,CAAC;EACrEa,KAAK,CAACX,MAAM,GAAG,EAAE;AACnB,CAAC;AAED,MAAMa,aAAa,GAAGnB,WAAW,CAAC;EAChCoB,IAAI,EAAE,UAAU;EAChBlB,YAAY;EACZmB,QAAQ,EAAE;IACRC,OAAOA,CAACL,KAAK,EAAEM,MAAM,EAAE;MACrB,OAAO;QAAE,GAAGN,KAAK;QAAE,GAAGM,MAAM,CAACC,OAAO;QAAEnB,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC;IAC9D,CAAC;IACDmB,OAAO,EAAE;MACPC,OAAOA,CAACT,KAAK,EAAEM,MAAM,EAAE;QACrBP,WAAW,CAACC,KAAK,CAAC;QAClBA,KAAK,CAACd,KAAK,GAAG,CAAC,GAAGc,KAAK,CAACd,KAAK,EAAEoB,MAAM,CAACC,OAAO,CAAC;QAC9CP,KAAK,CAACb,UAAU,GAAGmB,MAAM,CAACC,OAAO,CAACG,EAAE;MACtC,CAAC;MACDC,OAAOA,CAAA,EAAG;QACR,OAAO;UACLJ,OAAO,EAAE;YACPG,EAAE,EAAE1B,MAAM,CAAC,CAAC;YACZmB,IAAI,EAAE,WAAW;YACjBS,IAAI,EAAE,MAAM;YACZC,CAAC,EAAE,EAAE,GAAGnB,IAAI,CAACoB,MAAM,CAAC,CAAC,GAAG,GAAG;YAC3BC,CAAC,EAAE,EAAE,GAAGrB,IAAI,CAACoB,MAAM,CAAC,CAAC,GAAG,GAAG;YAC3BlB,KAAK,EAAE,GAAG;YACVC,MAAM,EAAE,GAAG;YACXmB,IAAI,EAAE;UACR;QACF,CAAC;MACH;IACF,CAAC;IACDC,QAAQ,EAAE;MACRR,OAAOA,CAACT,KAAK,EAAEM,MAAM,EAAE;QACrBP,WAAW,CAACC,KAAK,CAAC;QAClBA,KAAK,CAACd,KAAK,GAAG,CAAC,GAAGc,KAAK,CAACd,KAAK,EAAEoB,MAAM,CAACC,OAAO,CAAC;QAC9CP,KAAK,CAACb,UAAU,GAAGmB,MAAM,CAACC,OAAO,CAACG,EAAE;MACtC,CAAC;MACDC,OAAOA,CAACO,GAAG,EAAE;QACX,OAAO;UACLX,OAAO,EAAE;YACPG,EAAE,EAAE1B,MAAM,CAAC,CAAC;YACZmB,IAAI,EAAE,OAAO;YACbS,IAAI,EAAE,OAAO;YACbC,CAAC,EAAE,GAAG,GAAGnB,IAAI,CAACoB,MAAM,CAAC,CAAC,GAAG,GAAG;YAC5BC,CAAC,EAAE,EAAE,GAAGrB,IAAI,CAACoB,MAAM,CAAC,CAAC,GAAG,GAAG;YAC3BlB,KAAK,EAAE,GAAG;YACVC,MAAM,EAAE,GAAG;YACXqB;UACF;QACF,CAAC;MACH;IACF,CAAC;IACDC,MAAMA,CAACnB,KAAK,EAAEM,MAAM,EAAE;MACpBN,KAAK,CAACb,UAAU,GAAGmB,MAAM,CAACC,OAAO;IACnC,CAAC;IACDa,MAAMA,CAACpB,KAAK,EAAEM,MAAM,EAAE;MACpB;MACA,MAAM;QAAEI,EAAE;QAAEG,CAAC;QAAEE,CAAC;QAAEnB,KAAK;QAAEC;MAAO,CAAC,GAAGS,MAAM,CAACC,OAAO;MAClD,MAAMc,GAAG,GAAGrB,KAAK,CAACd,KAAK,CAACoC,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE,CAAC;MACrD,IAAIW,GAAG,IAAI,CAAC,EAAE;QACZrB,KAAK,CAACd,KAAK,GAAGc,KAAK,CAACd,KAAK,CAACsC,GAAG,CAAC,CAACD,EAAE,EAAEE,CAAC,KAAKA,CAAC,KAAKJ,GAAG,GAAG;UACnD,GAAGE,EAAE;UACLV,CAAC,EAAEvB,KAAK,CAACuB,CAAC,EAAE,CAAC,EAAElB,MAAM,CAACC,KAAK,IAAIA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI2B,EAAE,CAAC3B,KAAK,CAAC,CAAC;UAClDmB,CAAC,EAAEzB,KAAK,CAACyB,CAAC,EAAE,CAAC,EAAEpB,MAAM,CAACE,MAAM,IAAIA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI0B,EAAE,CAAC1B,MAAM,CAAC,CAAC;UACrDD,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI2B,EAAE,CAAC3B,KAAK;UACxBC,MAAM,EAAEA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI0B,EAAE,CAAC1B;QACvB,CAAC,GAAG0B,EAAE,CAAC;MACT;IACF,CAAC;IACDG,MAAMA,CAAC1B,KAAK,EAAE;MACZ;MACAD,WAAW,CAACC,KAAK,CAAC;MAClBA,KAAK,CAACd,KAAK,GAAG,CAAC,GAAGc,KAAK,CAACd,KAAK,CAAC;IAChC,CAAC;IACDyC,cAAcA,CAAC3B,KAAK,EAAE;MACpB,IAAI,CAACA,KAAK,CAACb,UAAU,EAAE;MACvBY,WAAW,CAACC,KAAK,CAAC;MAClBA,KAAK,CAACd,KAAK,GAAGc,KAAK,CAACd,KAAK,CAAC0C,MAAM,CAACL,EAAE,IAAIA,EAAE,CAACb,EAAE,KAAKV,KAAK,CAACb,UAAU,CAAC;MAClEa,KAAK,CAACb,UAAU,GAAG,IAAI;IACzB,CAAC;IACD0C,MAAMA,CAAC7B,KAAK,EAAEM,MAAM,EAAE;MACpB,MAAM;QAAEI,EAAE;QAAEP;MAAK,CAAC,GAAGG,MAAM,CAACC,OAAO;MACnCP,KAAK,CAACd,KAAK,GAAGc,KAAK,CAACd,KAAK,CAACsC,GAAG,CAACD,EAAE,IAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGa,EAAE;QAAEpB;MAAK,CAAC,GAAGoB,EAAE,CAAC;IAC1E,CAAC;IACDO,IAAIA,CAAC9B,KAAK,EAAE;MACV,MAAM+B,IAAI,GAAG/B,KAAK,CAACZ,IAAI,CAAC4C,GAAG,CAAC,CAAC;MAC7B,IAAID,IAAI,EAAE;QACR/B,KAAK,CAACX,MAAM,CAACY,IAAI,CAAC;UAAEf,KAAK,EAAEc,KAAK,CAACd,KAAK;UAAEC,UAAU,EAAEa,KAAK,CAACb;QAAW,CAAC,CAAC;QACvEa,KAAK,CAACd,KAAK,GAAG6C,IAAI,CAAC7C,KAAK;QACxBc,KAAK,CAACb,UAAU,GAAG4C,IAAI,CAAC5C,UAAU;MACpC;IACF,CAAC;IACD8C,IAAIA,CAACjC,KAAK,EAAE;MACV,MAAMkC,IAAI,GAAGlC,KAAK,CAACX,MAAM,CAAC2C,GAAG,CAAC,CAAC;MAC/B,IAAIE,IAAI,EAAE;QACRlC,KAAK,CAACZ,IAAI,CAACa,IAAI,CAAC;UAAEf,KAAK,EAAEc,KAAK,CAACd,KAAK;UAAEC,UAAU,EAAEa,KAAK,CAACb;QAAW,CAAC,CAAC;QACrEa,KAAK,CAACd,KAAK,GAAGgD,IAAI,CAAChD,KAAK;QACxBc,KAAK,CAACb,UAAU,GAAG+C,IAAI,CAAC/C,UAAU;MACpC;IACF,CAAC;IACDgD,SAASA,CAACnC,KAAK,EAAE;MACf,MAAMoC,IAAI,GAAG;QAAElD,KAAK,EAAEc,KAAK,CAACd,KAAK;QAAEC,UAAU,EAAEa,KAAK,CAACb;MAAW,CAAC;MACjEkD,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAClE,CAAC;IACDK,SAASA,CAACzC,KAAK,EAAE;MACf,MAAM0C,GAAG,GAAGL,YAAY,CAACM,OAAO,CAAC,oBAAoB,CAAC;MACtD,IAAID,GAAG,EAAE;QACP,MAAME,MAAM,GAAGL,IAAI,CAACM,KAAK,CAACH,GAAG,CAAC;QAC9B1C,KAAK,CAACd,KAAK,GAAG0D,MAAM,CAAC1D,KAAK,IAAI,EAAE;QAChCc,KAAK,CAACb,UAAU,GAAGyD,MAAM,CAACzD,UAAU,IAAI,IAAI;QAC5Ca,KAAK,CAACZ,IAAI,GAAG,EAAE;QACfY,KAAK,CAACX,MAAM,GAAG,EAAE;MACnB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXgB,OAAO;EAAEG,OAAO;EAAES,QAAQ;EAAEE,MAAM;EAAEC,MAAM;EAAEM,MAAM;EAClDC,cAAc;EAAEE,MAAM;EAAEC,IAAI;EAAEG,IAAI;EAAEE,SAAS;EAAEM;AACjD,CAAC,GAAGvC,aAAa,CAAC4C,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC/D,KAAK;AAC9C,OAAO,MAAMgE,gBAAgB,GAAGF,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC9D,UAAU;AAC1D,OAAO,MAAMgE,gBAAgB,GAAGA,CAAA,MAAO;EAAEvD,KAAK,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,CAAC;AAEnE,eAAeK,aAAa,CAACO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}