{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\Downloads\\\\mini-layout-editor\\\\mini-layout-editor\\\\src\\\\components\\\\CanvasArea.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, forwardRef } from 'react';\nimport { Stage, Layer, Rect, Image as KonvaImage, Transformer } from 'react-konva';\nimport useImage from 'use-image'; // ✅ from the installed 'use-image' package\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAll, selectSelectedId, select, update, commit, selectCanvasSize } from '../redux/elementsSlice';\n\n// ✅ Forward ref so Transformer can attach to this image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KImage = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  item,\n  isSelected,\n  onSelect,\n  onChange\n}, ref) => {\n  _s();\n  const [img] = useImage(item.src, 'anonymous');\n  return /*#__PURE__*/_jsxDEV(KonvaImage, {\n    image: img,\n    x: item.x,\n    y: item.y,\n    width: item.width,\n    height: item.height,\n    ref: ref,\n    onClick: onSelect,\n    onTap: onSelect,\n    draggable: true,\n    onDragMove: e => onChange({\n      x: e.target.x(),\n      y: e.target.y()\n    }),\n    onDragEnd: () => onChange({}, true),\n    onTransformEnd: e => {\n      const node = ref.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY();\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange({\n        x: node.x(),\n        y: node.y(),\n        width: Math.max(30, node.width() * scaleX),\n        height: Math.max(30, node.height() * scaleY)\n      }, true);\n    },\n    stroke: isSelected ? '#3b82f6' : '',\n    strokeWidth: isSelected ? 2 : 0,\n    cornerRadius: 8\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}, \"bWX2GhOZgczSHMZREYZbJEoKPuQ=\", false, function () {\n  return [useImage];\n})), \"bWX2GhOZgczSHMZREYZbJEoKPuQ=\", false, function () {\n  return [useImage];\n});\n_c2 = KImage;\nfunction SelectionTransformer({\n  selectedShapeRef\n}) {\n  _s2();\n  const trRef = useRef();\n  useEffect(() => {\n    if (selectedShapeRef.current) {\n      trRef.current.nodes([selectedShapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [selectedShapeRef]);\n  return /*#__PURE__*/_jsxDEV(Transformer, {\n    ref: trRef,\n    rotateEnabled: false,\n    borderStroke: \"#3b82f6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_s2(SelectionTransformer, \"uoyHQkJ1JBsrbad0qBsohmT6uDI=\");\n_c3 = SelectionTransformer;\nexport default function CanvasArea() {\n  _s3();\n  const items = useSelector(selectAll);\n  const selectedId = useSelector(selectSelectedId);\n  const dispatch = useDispatch();\n  const stageRef = useRef();\n  const selectedRef = useRef();\n  const canvasSize = useMemo(() => selectCanvasSize(), []);\n  const handleSelect = id => dispatch(select(id));\n  const handleChange = (id, attrs, commitChange = false) => {\n    var _attrs$x, _attrs$y, _attrs$width, _attrs$height;\n    const current = items.find(i => i.id === id);\n    if (!current) return;\n    const payload = {\n      id,\n      x: (_attrs$x = attrs.x) !== null && _attrs$x !== void 0 ? _attrs$x : current.x,\n      y: (_attrs$y = attrs.y) !== null && _attrs$y !== void 0 ? _attrs$y : current.y,\n      width: (_attrs$width = attrs.width) !== null && _attrs$width !== void 0 ? _attrs$width : current.width,\n      height: (_attrs$height = attrs.height) !== null && _attrs$height !== void 0 ? _attrs$height : current.height\n    };\n    dispatch(update(payload));\n    if (commitChange) dispatch(commit());\n  };\n  const handleStageMouseDown = e => {\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (clickedOnEmpty) dispatch(select(null));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-3 flex-1\",\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"konva-container bg-white rounded-xl border border-gray-200\",\n      onMouseDown: handleStageMouseDown,\n      ref: stageRef,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [[...Array(40)].map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n          x: 0,\n          y: i * 13,\n          width: canvasSize.width,\n          height: 1,\n          fill: \"#f1f5f9\"\n        }, 'grid-h-' + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)), [...Array(70)].map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n          x: i * 13,\n          y: 0,\n          width: 1,\n          height: canvasSize.height,\n          fill: \"#f1f5f9\"\n        }, 'grid-v-' + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)), items.map(item => {\n          const isSelected = item.id === selectedId;\n          const commonProps = {\n            x: item.x,\n            y: item.y,\n            width: item.width,\n            height: item.height,\n            onClick: () => handleSelect(item.id),\n            onTap: () => handleSelect(item.id),\n            draggable: true,\n            onDragMove: e => handleChange(item.id, {\n              x: e.target.x(),\n              y: e.target.y()\n            }),\n            onDragEnd: () => handleChange(item.id, {}, true)\n          };\n          if (item.type === 'rect') {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Rect, {\n                ...commonProps,\n                cornerRadius: 12,\n                fill: item.fill || '#cfe8ff',\n                stroke: isSelected ? '#3b82f6' : '#93c5fd',\n                strokeWidth: isSelected ? 2.5 : 1,\n                ref: isSelected ? selectedRef : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), isSelected && /*#__PURE__*/_jsxDEV(SelectionTransformer, {\n                selectedShapeRef: selectedRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 34\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this);\n          }\n          if (item.type === 'image') {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(KImage, {\n                item: item,\n                isSelected: isSelected,\n                onSelect: () => handleSelect(item.id),\n                onChange: (attrs, commitChange) => handleChange(item.id, attrs, commitChange),\n                ref: isSelected ? selectedRef : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), isSelected && /*#__PURE__*/_jsxDEV(SelectionTransformer, {\n                selectedShapeRef: selectedRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 34\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s3(CanvasArea, \"7hTDFd0BWHfaoazXpmLapOKPVMA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c4 = CanvasArea;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"KImage$forwardRef\");\n$RefreshReg$(_c2, \"KImage\");\n$RefreshReg$(_c3, \"SelectionTransformer\");\n$RefreshReg$(_c4, \"CanvasArea\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","forwardRef","Stage","Layer","Rect","Image","KonvaImage","Transformer","useImage","useDispatch","useSelector","selectAll","selectSelectedId","select","update","commit","selectCanvasSize","jsxDEV","_jsxDEV","KImage","_s","_c","item","isSelected","onSelect","onChange","ref","img","src","image","x","y","width","height","onClick","onTap","draggable","onDragMove","e","target","onDragEnd","onTransformEnd","node","current","scaleX","scaleY","Math","max","stroke","strokeWidth","cornerRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c2","SelectionTransformer","selectedShapeRef","_s2","trRef","nodes","getLayer","batchDraw","rotateEnabled","borderStroke","_c3","CanvasArea","_s3","items","selectedId","dispatch","stageRef","selectedRef","canvasSize","handleSelect","id","handleChange","attrs","commitChange","_attrs$x","_attrs$y","_attrs$width","_attrs$height","find","i","payload","handleStageMouseDown","clickedOnEmpty","getStage","className","children","onMouseDown","Array","map","_","fill","commonProps","type","Fragment","_c4","$RefreshReg$"],"sources":["C:/Users/tharu/Downloads/mini-layout-editor/mini-layout-editor/src/components/CanvasArea.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, forwardRef } from 'react';\nimport { Stage, Layer, Rect, Image as KonvaImage, Transformer } from 'react-konva';\nimport useImage from 'use-image'; // ✅ from the installed 'use-image' package\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAll, selectSelectedId, select, update, commit, selectCanvasSize } from '../redux/elementsSlice';\n\n// ✅ Forward ref so Transformer can attach to this image\nconst KImage = forwardRef(({ item, isSelected, onSelect, onChange }, ref) => {\n  const [img] = useImage(item.src, 'anonymous');\n\n  return (\n    <KonvaImage\n      image={img}\n      x={item.x}\n      y={item.y}\n      width={item.width}\n      height={item.height}\n      ref={ref}\n      onClick={onSelect}\n      onTap={onSelect}\n      draggable\n      onDragMove={(e) => onChange({ x: e.target.x(), y: e.target.y() })}\n      onDragEnd={() => onChange({}, true)}\n      onTransformEnd={(e) => {\n        const node = ref.current;\n        const scaleX = node.scaleX();\n        const scaleY = node.scaleY();\n        node.scaleX(1);\n        node.scaleY(1);\n        onChange(\n          {\n            x: node.x(),\n            y: node.y(),\n            width: Math.max(30, node.width() * scaleX),\n            height: Math.max(30, node.height() * scaleY),\n          },\n          true\n        );\n      }}\n      stroke={isSelected ? '#3b82f6' : ''}\n      strokeWidth={isSelected ? 2 : 0}\n      cornerRadius={8}\n    />\n  );\n});\n\nfunction SelectionTransformer({ selectedShapeRef }) {\n  const trRef = useRef();\n  useEffect(() => {\n    if (selectedShapeRef.current) {\n      trRef.current.nodes([selectedShapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [selectedShapeRef]);\n  return <Transformer ref={trRef} rotateEnabled={false} borderStroke=\"#3b82f6\" />;\n}\n\nexport default function CanvasArea() {\n  const items = useSelector(selectAll);\n  const selectedId = useSelector(selectSelectedId);\n  const dispatch = useDispatch();\n  const stageRef = useRef();\n  const selectedRef = useRef();\n  const canvasSize = useMemo(() => selectCanvasSize(), []);\n\n  const handleSelect = (id) => dispatch(select(id));\n\n  const handleChange = (id, attrs, commitChange = false) => {\n    const current = items.find((i) => i.id === id);\n    if (!current) return;\n    const payload = {\n      id,\n      x: attrs.x ?? current.x,\n      y: attrs.y ?? current.y,\n      width: attrs.width ?? current.width,\n      height: attrs.height ?? current.height,\n    };\n    dispatch(update(payload));\n    if (commitChange) dispatch(commit());\n  };\n\n  const handleStageMouseDown = (e) => {\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (clickedOnEmpty) dispatch(select(null));\n  };\n\n  return (\n    <div className=\"card p-3 flex-1\">\n      <Stage\n        width={canvasSize.width}\n        height={canvasSize.height}\n        className=\"konva-container bg-white rounded-xl border border-gray-200\"\n        onMouseDown={handleStageMouseDown}\n        ref={stageRef}\n      >\n        <Layer>\n          {/* Optional subtle grid */}\n          {[...Array(40)].map((_, i) => (\n            <Rect\n              key={'grid-h-' + i}\n              x={0}\n              y={i * 13}\n              width={canvasSize.width}\n              height={1}\n              fill=\"#f1f5f9\"\n            />\n          ))}\n          {[...Array(70)].map((_, i) => (\n            <Rect\n              key={'grid-v-' + i}\n              x={i * 13}\n              y={0}\n              width={1}\n              height={canvasSize.height}\n              fill=\"#f1f5f9\"\n            />\n          ))}\n\n          {items.map((item) => {\n            const isSelected = item.id === selectedId;\n            const commonProps = {\n              x: item.x,\n              y: item.y,\n              width: item.width,\n              height: item.height,\n              onClick: () => handleSelect(item.id),\n              onTap: () => handleSelect(item.id),\n              draggable: true,\n              onDragMove: (e) => handleChange(item.id, { x: e.target.x(), y: e.target.y() }),\n              onDragEnd: () => handleChange(item.id, {}, true),\n            };\n\n            if (item.type === 'rect') {\n              return (\n                <React.Fragment key={item.id}>\n                  <Rect\n                    {...commonProps}\n                    cornerRadius={12}\n                    fill={item.fill || '#cfe8ff'}\n                    stroke={isSelected ? '#3b82f6' : '#93c5fd'}\n                    strokeWidth={isSelected ? 2.5 : 1}\n                    ref={isSelected ? selectedRef : null}\n                  />\n                  {isSelected && <SelectionTransformer selectedShapeRef={selectedRef} />}\n                </React.Fragment>\n              );\n            }\n\n            if (item.type === 'image') {\n              return (\n                <React.Fragment key={item.id}>\n                  <KImage\n                    item={item}\n                    isSelected={isSelected}\n                    onSelect={() => handleSelect(item.id)}\n                    onChange={(attrs, commitChange) =>\n                      handleChange(item.id, attrs, commitChange)\n                    }\n                    ref={isSelected ? selectedRef : null}\n                  />\n                  {isSelected && <SelectionTransformer selectedShapeRef={selectedRef} />}\n                </React.Fragment>\n              );\n            }\n\n            return null;\n          })}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}