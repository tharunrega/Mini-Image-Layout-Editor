{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emboss = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nconst Emboss = function (imageData) {\n  const strength = this.embossStrength() * 10,\n    greyLevel = this.embossWhiteLevel() * 255,\n    direction = this.embossDirection(),\n    blend = this.embossBlend(),\n    data = imageData.data,\n    w = imageData.width,\n    h = imageData.height,\n    w4 = w * 4;\n  let dirY = 0,\n    dirX = 0,\n    y = h;\n  switch (direction) {\n    case 'top-left':\n      dirY = -1;\n      dirX = -1;\n      break;\n    case 'top':\n      dirY = -1;\n      dirX = 0;\n      break;\n    case 'top-right':\n      dirY = -1;\n      dirX = 1;\n      break;\n    case 'right':\n      dirY = 0;\n      dirX = 1;\n      break;\n    case 'bottom-right':\n      dirY = 1;\n      dirX = 1;\n      break;\n    case 'bottom':\n      dirY = 1;\n      dirX = 0;\n      break;\n    case 'bottom-left':\n      dirY = 1;\n      dirX = -1;\n      break;\n    case 'left':\n      dirY = 0;\n      dirX = -1;\n      break;\n    default:\n      Util_1.Util.error('Unknown emboss direction: ' + direction);\n  }\n  do {\n    const offsetY = (y - 1) * w4;\n    let otherY = dirY;\n    if (y + otherY < 1) {\n      otherY = 0;\n    }\n    if (y + otherY > h) {\n      otherY = 0;\n    }\n    const offsetYOther = (y - 1 + otherY) * w * 4;\n    let x = w;\n    do {\n      const offset = offsetY + (x - 1) * 4;\n      let otherX = dirX;\n      if (x + otherX < 1) {\n        otherX = 0;\n      }\n      if (x + otherX > w) {\n        otherX = 0;\n      }\n      const offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n      const dR = data[offset] - data[offsetOther];\n      const dG = data[offset + 1] - data[offsetOther + 1];\n      const dB = data[offset + 2] - data[offsetOther + 2];\n      let dif = dR;\n      const absDif = dif > 0 ? dif : -dif;\n      const absG = dG > 0 ? dG : -dG;\n      const absB = dB > 0 ? dB : -dB;\n      if (absG > absDif) {\n        dif = dG;\n      }\n      if (absB > absDif) {\n        dif = dB;\n      }\n      dif *= strength;\n      if (blend) {\n        const r = data[offset] + dif;\n        const g = data[offset + 1] + dif;\n        const b = data[offset + 2] + dif;\n        data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n        data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n        data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n      } else {\n        let grey = greyLevel - dif;\n        if (grey < 0) {\n          grey = 0;\n        } else if (grey > 255) {\n          grey = 255;\n        }\n        data[offset] = data[offset + 1] = data[offset + 2] = grey;\n      }\n    } while (--x);\n  } while (--y);\n};\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', undefined, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, undefined, Factory_1.Factory.afterSetFilter);","map":{"version":3,"names":["Object","defineProperty","exports","value","Emboss","Factory_1","require","Node_1","Util_1","Validators_1","imageData","strength","embossStrength","greyLevel","embossWhiteLevel","direction","embossDirection","blend","embossBlend","data","w","width","h","height","w4","dirY","dirX","y","Util","error","offsetY","otherY","offsetYOther","x","offset","otherX","offsetOther","dR","dG","dB","dif","absDif","absG","absB","r","g","b","grey","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter","undefined"],"sources":["C:/Users/tharu/Downloads/mini-layout-editor/mini-layout-editor/node_modules/konva/lib/filters/Emboss.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emboss = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Node_1 = require(\"../Node\");\nconst Util_1 = require(\"../Util\");\nconst Validators_1 = require(\"../Validators\");\nconst Emboss = function (imageData) {\n    const strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4;\n    let dirY = 0, dirX = 0, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        const offsetY = (y - 1) * w4;\n        let otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        const offsetYOther = (y - 1 + otherY) * w * 4;\n        let x = w;\n        do {\n            const offset = offsetY + (x - 1) * 4;\n            let otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            const offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            const dR = data[offset] - data[offsetOther];\n            const dG = data[offset + 1] - data[offsetOther + 1];\n            const dB = data[offset + 2] - data[offsetOther + 2];\n            let dif = dR;\n            const absDif = dif > 0 ? dif : -dif;\n            const absG = dG > 0 ? dG : -dG;\n            const absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                const r = data[offset] + dif;\n                const g = data[offset + 1] + dif;\n                const b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                let grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', undefined, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, undefined, Factory_1.Factory.afterSetFilter);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}