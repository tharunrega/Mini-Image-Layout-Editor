{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RGBComponent = RGBComponent;\nexports.alphaComponent = alphaComponent;\nexports.getNumberValidator = getNumberValidator;\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nexports.getStringValidator = getStringValidator;\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nexports.getFunctionValidator = getFunctionValidator;\nexports.getNumberArrayValidator = getNumberArrayValidator;\nexports.getBooleanValidator = getBooleanValidator;\nexports.getComponentValidator = getComponentValidator;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n  if (Util_1.Util._isString(val)) {\n    return '\"' + val + '\"';\n  }\n  if (Object.prototype.toString.call(val) === '[object Number]') {\n    return val;\n  }\n  if (Util_1.Util._isBoolean(val)) {\n    return val;\n  }\n  return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  }\n  return Math.round(val);\n}\nfunction alphaComponent(val) {\n  if (val > 1) {\n    return 1;\n  } else if (val < 0.0001) {\n    return 0.0001;\n  }\n  return val;\n}\nfunction getNumberValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isNumber(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n      }\n      return val;\n    };\n  }\n}\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      let isNumber = Util_1.Util._isNumber(val);\n      let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n      if (!isNumber && !isValidArray) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n      }\n      return val;\n    };\n  }\n}\nfunction getNumberOrAutoValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const isNumber = Util_1.Util._isNumber(val);\n      const isAuto = val === 'auto';\n      if (!(isNumber || isAuto)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n      }\n      return val;\n    };\n  }\n}\nfunction getStringValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isString(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n      }\n      return val;\n    };\n  }\n}\nfunction getStringOrGradientValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const isString = Util_1.Util._isString(val);\n      const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' || val && val['addColorStop'];\n      if (!(isString || isGradient)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n      }\n      return val;\n    };\n  }\n}\nfunction getFunctionValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util_1.Util._isFunction(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n      }\n      return val;\n    };\n  }\n}\nfunction getNumberArrayValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n      if (TypedArray && val instanceof TypedArray) {\n        return val;\n      }\n      if (!Util_1.Util._isArray(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n      } else {\n        val.forEach(function (item) {\n          if (!Util_1.Util._isNumber(item)) {\n            Util_1.Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + '. Make sure that all elements are numbers.');\n          }\n        });\n      }\n      return val;\n    };\n  }\n}\nfunction getBooleanValidator() {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      const isBool = val === true || val === false;\n      if (!isBool) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n      }\n      return val;\n    };\n  }\n}\nfunction getComponentValidator(components) {\n  if (Global_1.Konva.isUnminified) {\n    return function (val, attr) {\n      if (val === undefined || val === null) {\n        return val;\n      }\n      if (!Util_1.Util.isObject(val)) {\n        Util_1.Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n      }\n      return val;\n    };\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","RGBComponent","alphaComponent","getNumberValidator","getNumberOrArrayOfNumbersValidator","getNumberOrAutoValidator","getStringValidator","getStringOrGradientValidator","getFunctionValidator","getNumberArrayValidator","getBooleanValidator","getComponentValidator","Global_1","require","Util_1","_formatValue","val","Util","_isString","prototype","toString","call","_isBoolean","Math","round","Konva","isUnminified","attr","_isNumber","warn","noOfElements","isNumber","isValidArray","_isArray","length","isAuto","isString","isGradient","_isFunction","TypedArray","Int8Array","getPrototypeOf","forEach","item","isBool","components","undefined","isObject"],"sources":["C:/Users/tharu/Downloads/mini-layout-editor/mini-layout-editor/node_modules/konva/lib/Validators.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RGBComponent = RGBComponent;\nexports.alphaComponent = alphaComponent;\nexports.getNumberValidator = getNumberValidator;\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nexports.getStringValidator = getStringValidator;\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nexports.getFunctionValidator = getFunctionValidator;\nexports.getNumberArrayValidator = getNumberArrayValidator;\nexports.getBooleanValidator = getBooleanValidator;\nexports.getComponentValidator = getComponentValidator;\nconst Global_1 = require(\"./Global\");\nconst Util_1 = require(\"./Util\");\nfunction _formatValue(val) {\n    if (Util_1.Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util_1.Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nfunction getNumberValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isNumber(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util_1.Util._isNumber(val);\n            let isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberOrAutoValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isNumber = Util_1.Util._isNumber(val);\n            const isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nfunction getStringValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isString(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nfunction getStringOrGradientValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util_1.Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val['addColorStop']);\n            if (!(isString || isGradient)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nfunction getFunctionValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isFunction(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberArrayValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util_1.Util._isArray(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_1.Util._isNumber(item)) {\n                        Util_1.Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nfunction getBooleanValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isBool = val === true || val === false;\n            if (!isBool) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nfunction getComponentValidator(components) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util_1.Util.isObject(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}